<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pm="http://primefaces.org/mobile"
	xmlns:b="http://bootsfaces.net/ui"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:sec="http://www.springframework.org/security/tags"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions"
	xmlns:sp="http://www.springframework.org/tags"
	template="/template/template.xhtml">

	<ui:define name="title">        
            USUÁRIOS      
    </ui:define>

	<!-- <ui:define name="header" /> -->
	<!-- <ui:define name="slide" /> -->
	<!-- <ui:define name="search" /> -->
	<!-- <ui:define name="modal" /> -->
	<!-- <ui:define name="menuLeft" /> -->
	<!-- <ui:define name="menuRight" /> -->

	<ui:define name="main">

		<ol class="breadcrumb">
			<li class="active"><a href="#{request.contextPath}/usuarios">Usuários</a></li>
			<li><a href="#{request.contextPath}/perfis">Perfis</a></li>
			<li><a href="#{request.contextPath}/permissoes">Permissões</a></li>
		</ol>
		<!-- //breadcrumb-->

		<div id="content">
		
		<h:outputText value="#{caixaService.caixa}" />

			<h3>Administrar usuários</h3>

			<h:form id="formDataTable">
			
					<p:remoteCommand name="callAlterar" actionListener="#{usuarioService.alterar}" process="@this" />
					<p:remoteCommand name="callExcluir" actionListener="#{usuarioService.excluir}" process="@this" />
					<p:remoteCommand name="callStatus" actionListener="#{usuarioService.status}" process="@this" />
					<p:remoteCommand name="updateDataTable" actionListener="#{facesUtil.atualizaTable('formDataTable')}" process="@this" />

					<p:commandButton icon="fa fa-share-square-o" value="Cadastrar"
						action="#{usuarioService.add}" process="@this"
						styleClass="noui zoom btn btn-primary btn-lg" />
					
					<h:panelGroup id="dataTableBlock">
					<!-- <div class="table-responsive"> -->
					<table id="dataTable" class="table table-striped table-bordered table-hover" >
					
				        <thead>
				            <tr>
				                <th class="col-check noprint">CHECK</th>
				                <th class="col-codigo">CÓDIGO</th>
				                <th class="left">LOGIN</th>
				                <th class="col-acoes noprint" >AÇÕES</th>
				            </tr>
				        </thead>
				        
				        <tfoot>
				            <tr>
				                <th >CHECK</th>
				                <th >CÓDIGO</th>
				                <th class="left">LOGIN</th>
				                <th >AÇÕES</th>
				            </tr>
				        </tfoot>
				        
			        </table>
			        <!-- </div> -->
			        </h:panelGroup>
			        
			</h:form>

		</div>

		<ui:include src="modalUsuario.xhtml" />
		<ui:include src="modalPerfil.xhtml" />
		<ui:include src="modalPermissao.xhtml" />
		
	</ui:define>

	<ui:define name="script">
	
		<script type="text/javascript">

				var body=$("body");
					body.toggleClass("in");

				var settingsTable = {
       				sAjaxSource: window.location.href + "/lista",
					aoColumns: [
						// visible:true, bSearchable:true, sClass:"left select-filter"
			            { mDataProp: "check" },
			            { mDataProp: "codigo" },
			            { mDataProp: "login" },
			            { mDataProp: "acao" },
			        ],
       		        fnServerData: function ( sSource, aoData, fnCallback ) {
       		            $.ajax({
       		                dataType: 'json',
       		                contentType: "application/json;charset=UTF-8",
       		                type: "POST",
       		                url: sSource,
       		                success: function(json){
       		                	setTimeout(function(){
           		                	new jBox('Confirm',{confirmButton: 'Excluir!',cancelButton: 'Cancelar'});
       		                	},50);
       		                	fnCallback(json);
       		                	$('.switch')['bootstrapSwitch']();
       		                },
       		                error : function (e) {
       		                	//console.log(e);
       	                    },
                            done : function(e) {
                   				//console.log("DONE");
                   			}
       		            });
       		        },
       		        columnDefs: [
						{
                              orderable: false,
                              className: 'select-checkbox',
                              targets: 'col-check',
                              width: "15px",
                              data: null,
                              defaultContent: '',
                              //visible: false,  
                              searchable: false,
                          },
                          {
						    targets: "col-codigo",
						    width: "5%",
						    data: "codigo",
						    searchable: true,
						    className: "center",
						},   
                           {
                              targets: "col-acoes",
                              width: "115px",
                              orderable: false,
                              searchable: false,
                              render: function ( data, type, row ) {
								  return data;
                              },
                           }     
       		        ],
                    order: [[ 1, 'desc' ], [ 2, 'asc' ]],
                    select: {
                          style: 'multi',
                          selector: 'td:first-child',
                    },
                    stateSave: false,
                    language: {
                          search: 'Busca:',
                          lengthMenu: 'Mostrar _MENU_ resultados',
                          infoFiltered: ' - em _MAX_ registros',
                          info: 'Mostrando de _START_ até _END_ de _TOTAL_ registros encontrados',
                          zeroRecords: 'Nenhum registro encontrado!',
                          loadingRecords: " Aguarde - carregando lista... ",
                          infoEmpty: "No records available",
                          decimal: ',',
                          thousands: '.',
                          paginate: {
                              first:    '«',
                              previous: '‹',
                              next:     '›',
                              last:     '»'
                          },
                          aria: {
                              paginate: {
                                  first:    'First',
                                  previous: 'Previous',
                                  next:     'Next',
                                  last:     'Last'
                              }
                          },
                          buttons: {
                        	  colvis: 'Exibir colunas',
                        	  colvisRestore : 'RESTAURAR',
                              pageLength: {
                                 "-1": 'Exibir todos',
      				              _: 'Exibindo %d'
                              }
                          },
                          select: {
                              rows: "( %d registros selecionados )"
                          }
                    },
                    fixedHeader: true,
                    lengthMenu: [[5,10,25,50,-1],[5,10,25,50,"todos"]],
                    pagingType: 'full_numbers',
                    dom: 'lfrtipB',
                    colVis: {
                          restore: "Restore",
                          showAll: "Show all",
                          showNone: "Show none",
                    },
                    buttons: [
								{
				                    extend: 'colvis',
				                    className: 'btn btn-default btn-click btn-sm',
				                    postfixButtons: ['colvisRestore'],
				                    collectionLayout: 'fixed two-column',
				                    columns: ':not(.col-select)',				                    
				                },
				                {
									className: 'btn btn-default btn-click btn-sm',
									extend: 'print',
									autoPrint: false,
								    exportOptions: {
								        columns: [ ':visible:not(.noprint)' ],
								        //columns: ':visible',
								        /* columns: function ( idx, data, node ) {
										  return idx === 0 || table.column(idx).visible();
										} */
								    },
					                customize: function ( win ) {
					                    $(win.document.body).css('background','none', 'important');
					                    $(win.document.body).css('padding','40px','important');
					                    $(win.document.body).find('table')
					                        .addClass( 'compact' )
					                        .css( 'font-size', 'inherit' );
					                }
								},
                                {
                                    text: 'Selecionar todos',
                                    className: 'btn btn-info btn-click btn-sm',
                                    action: function (e, dt, node, config) {
                                        dt.rows( function ( idx, data, node ) {
                                            //alert(data);
                                            //window.bim = data;
                                            //return data.boleto.charAt(0) === 'A' ? true : false;
                                            //return data.boleto === 'boleto' ? true : false;
                                            return true;
                                        } ).select();
                                    }
                                },
                                {
                                    extend: 'selectNone',
                                    text: 'Desmarcar todos',
                                    className: 'btn btn-warning btn-click btn-sm',
                                },
                                {
                                    extend: 'selected',
                                    text: 'Excluir selecionados',
                                    className: 'btn btn-danger btn-click btn-sm',
                                    action: function ( e, dt, node, config ) {

                                    	e = e || window.e;
                                        if(e.preventDefault)
                                            e.preventDefault();
                                        else
                                            e.returnValue = false;
                                        var total = dt.rows({selected:true}).data().length;
                                        window.selecionados = [];
                                        for (i = 0; i &lt; total; i++) {
                                      	  	//selecionados[i] = dt.rows({selected:true}).data()[i];
                                      		selecionados[i] = dt.rows({selected:true}).data()[i].codigo;
                                        }
                                        //window.dados = dt.rows({selected:true}).data();
                                        //window.dados = selecionados;
                                        window.excluirSelecionados = function () {
                                        	myModal.close();
                                        	$.ajax({
                                                url: window.location.href+'/deleteall',
                                                data: JSON.stringify({myArray:selecionados}),
                                                dataType: 'json',
                                                type: "POST",
                                                timeout : 100000,
                                                contentType: "application/json; charset=utf-8",
                                                processData:false,
                                                async: true,
                                                cache: false,          
                                                success: function(data, textStatus) {
                                                    //console.log(data.msg);
                                                    notice("INFO!",data.msg,"azul",8000,"boop2"); 
                                                    if(data.update)
                                                        updateDataTable();    
                                                },
                                                error: function(xhr, textStatus, errorThrown){
                                                	//console.log("ERROR - "+ textStatus);
                                                },
                                                done : function(e) {
                                    				//console.log("DONE");
                                    			}
                                            });
                                            //FIM AJAX
                                        }
                                        //FIM EXCLUIRSELECIONADOS
                                        
                                        window.myModal = new jBox("Modal",{
                                    	    title: "Confirmacao",
                                    	    content: "Deseja excluir o(s) registro(s): "+selecionados+
                                    	    	" &lt;br/&gt; &lt;div style=\"margin: 3px; text-align: center; padding-top: 5px;\" &gt; "+
                                    	    	" &lt;button type=\"button\" class=\"btn btn-default btn-sm\" onclick=\"myModal.close()\"&gt; Cancelar &lt;/button&gt; "+
                                    	    	" &lt;button type=\"button\" class=\"btn btn-danger btn-sm\" onclick=\"excluirSelecionados()\"&gt; Excluir &lt;/button&gt; "+
                                    	    	" &lt;/div&gt; ",
                                    	});
                                        myModal.open();
                                        
                                    },
                                 },
                     ],
                     responsive: true,
					   initComplete: function () {
				            this.api().columns('.select-filter').every(function () {
				                var column = this;
				                var select = $('<select class="selectpicker"><option value=""></option></select>')
				                .appendTo($(column.footer()).empty())
				                .on('change',function () {
				                        var val = $.fn.dataTable.util.escapeRegex(
				                            $(this).val()
				                        );
				                        column
				                            .search( val ? '^'+val+'$' : '', true, false )
				                            .draw();
				                    });
				                column.data().unique().sort().each( function ( d, j ) {
				                    select.append( '<option value="'+d+'">'+d+'</option>' )
				                });
				            });
				        },
				}

		        /* $('#dataTable').on( 'click', 'tbody td:not(:first-child)', function (e) {
		            editor.inline( this, {
		                buttons: { label: '&gt;', fn: function () { this.submit(); } }
		            } );
		        } ); */

		        //jQuery(window).load(function() {
			    jQuery(document).ready(function(){
					window.table = $('#dataTable').DataTable(settingsTable);
				});
				
	</script>
	
	</ui:define>

</ui:composition>