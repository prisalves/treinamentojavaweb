<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:faces="http://www.springframework.org/schema/faces"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/jdbc
                    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop.xsd
                    http://www.springframework.org/schema/task
                    http://www.springframework.org/schema/task/spring-task.xsd
                    http://www.springframework.org/schema/util
                    http://www.springframework.org/schema/util/spring-util.xsd
                    http://www.springframework.org/schema/mvc
  					http://www.springframework.org/schema/mvc/spring-mvc.xsd
  					http://www.springframework.org/schema/faces
			 		http://www.springframework.org/schema/faces/spring-faces.xsd">
  					
   	<faces:resources />
   	
    <!-- 	
    <bean class="org.springframework.faces.webflow.JsfFlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor" />
	</bean> 
	-->
	
   	<bean class="org.springframework.web.servlet.view.XmlViewResolver" p:order="0" p:location="/WEB-INF/views.xml" />

	<context:component-scan base-package="sistemafenicia" />

	<!-- Use annotations (@Autowired) for property injection -->
	<context:annotation-config />

	<mvc:annotation-driven />
	
	<!-- <mvc:resources order="0" location="/WEB-INF/web-content/" mapping="/WEB-INF/web-content/**"/> -->
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- @RequestMapping -->
	<mvc:default-servlet-handler />

	<context:spring-configured />
	
	<!-- <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="sistemafenicia.scope.ViewScope"/>
                </entry>
                <entry key="request">
	                <bean class="org.springframework.context.support.SimpleThreadScope"/>
	            </entry>
            </map>
        </property>
    </bean> -->
    
	<!-- <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping"> 
	    <property name="order" value="2" /> 
	    <property name="flowRegistry" ref="flowRegistry" /> 
	</bean> -->

	<!-- ########################## -->

	<context:property-placeholder location="classpath:jdbc.properties"
		file-encoding="UTF-8" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxStatements" value="${jdbc.maxStatements}" />
		<property name="testConnectionOnCheckout" value="${jdbc.testConnection}" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="packagesToScan">
			<list>
				<value>sistemafenicia.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.format_sql">${jdbc.format_sql}</prop>
				<prop key="hibernate.show_sql">${jdbc.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${jdbc.hbm2ddl.auto}</prop>
				<prop key="hibernate.generate_statistics">${jdbc.generate_statistics}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${jdbc.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_minimal_puts">${jdbc.cache.use_minimal_puts}</prop>
				<prop key="hibernate.cache.infinispan.statistics">${jdbc.cache.infinispan.statistics}</prop>
				<prop key="hibernate.current_session_context_classs">${jdbc.current_session_context_classs}</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">${jdbc.enable_lazy_load_no_trans}</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- proxy-target-class="true" --> 
	
	<!-- 
	<bean id="entityManagerFactory" depends-on="schemaGenerator"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>sistemafenicia.model</value>
			</list>
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="schemaGenerator" class="sistemafenicia.utils.SchemaGenerator">
		<property name="schema" value="ExampleSchema" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionManager2" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager2" />
	-->
	
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="get*" read-only="true" propagation="REQUIRED" 
		/> <tx:method name="find*" read-only="true" /> <tx:method name="*" propagation="REQUIRED" 
		/> </tx:attributes> </tx:advice> -->


	<bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator" />
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- ########################## -->

	<security:global-method-security 
		jsr250-annotations="enabled" proxy-target-class="true"
		secured-annotations="enabled" pre-post-annotations="enabled">
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>
	<!-- -->
	

	<bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="permissionEvaluator" />
	</bean>

	<bean id="permissionEvaluator" class="sistemafenicia.utils.CustomPermissionEvaluator" />

	<!-- ########################## -->

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="authProvider">
			<!-- <security:password-encoder ref="encoder"/> -->
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> 
		<property name="userDetailsService" ref="userDetailsServiceImpl" /> 
		<property name="passwordEncoder" ref="encoder" /> 
	</bean>

	<bean id='encoder'
		class='org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' >
	   <constructor-arg name="strength" value="11" />
	</bean>

	<!-- ########################## -->

	<!-- <bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:defaultErrorView="uncaughtException">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
				<prop key=".TypeMismatchException">resourceNotFound</prop>
				<prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
				<prop key="java.lang.ArithmeticException">index/2</prop>
				<prop key="java.io.IOException">index/3</prop>
				<prop key=".MethodNotFoundException">index/4</prop>
				<prop key="javax.el.MethodNotFoundException">index/5</prop>
				<prop key=".NullPointerException">index/6</prop>
				<prop key="java.lang.Exception">index/7</prop>
				<prop key=".AccessDeniedException">accessDenied</prop>
			</props>
		</property>
	</bean> -->
		
	<!-- ########################## -->
	
	<!-- 
	<bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <property name="loginFormUrl" value="/login" />
    </bean> 
    -->
    
	<!-- <bean id="usernamePasswordAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationFailureHandler" ref="failureHandler" />
        <property name="authenticationSuccessHandler" ref="successHandler" />
        <property name="filterProcessesUrl" value="/processLogin" />
        <property name="postOnly" value="true" />
    </bean>
    
	<bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="/login" />
    </bean>

    <bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <property name="defaultFailureUrl" value="/login?login_error=true" />
    </bean> -->
    
    <bean id="myAuthenticationSuccessHandler"
        class="sistemafenicia.utils.MySimpleUrlAuthenticationSuccessHandler" />
    
    <!-- <bean id="authenticationFailureHandler"
	    class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
	    <property name="exceptionMappings">
	        <props>
	            <prop key="org.springframework.security.authentication.BadCredentialsException">/login/badCredentials</prop>
	            <prop key="org.springframework.security.authentication.CredentialsExpiredException">/login/credentialsExpired</prop>
	            <prop key="org.springframework.security.authentication.LockedException">/login/accountLocked</prop>
	            <prop key="org.springframework.security.authentication.DisabledException">/login/accountDisabled</prop>
	        </props>
	    </property>
	    <property name="defaultFailureUrl" value="/login/erro" />
	</bean> -->

	<security:http security="none" pattern="/template/500.xhtml" />
	<security:http security="none" pattern="/javax.faces.resource/**" />
	<security:http security="none" pattern="/resources/**" />

	<!-- entry-point-ref="loginUrlAuthenticationEntryPoint" -->
	<security:http auto-config="true" use-expressions="true" disable-url-rewriting="false">
	    <security:headers disabled="true" />
	    <security:csrf disabled="true" />
	    <!-- <security:custom-filter position="FORM_LOGIN_FILTER" ref="usernamePasswordAuthenticationFilter" /> -->
		<security:intercept-url pattern="/javax.faces.resource/**" access="permitAll" />
		<security:intercept-url pattern="/resources/**" access="permitAll" />
		<security:intercept-url pattern="/login" access="permitAll" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		<security:access-denied-handler error-page="/accessDenied" />
		
		<!-- 
		authentication-failure-url="/login?status=error" 
		authentication-failure-handler-ref="myAuthenticationSuccessHandler"
		-->
		<security:form-login login-page="/login"
			default-target-url="/" always-use-default-target="false"
			password-parameter="j_password" username-parameter="j_username"
			authentication-failure-url="/login?status=error"
			authentication-success-handler-ref="myAuthenticationSuccessHandler" />

		<security:session-management
			session-authentication-error-url="/login?status=session"
			invalid-session-url="/login">
			<security:concurrency-control
				max-sessions="3" error-if-maximum-exceeded="true" expired-url="/login?status=expired" />
		</security:session-management>

		<security:logout logout-url="/j_spring_security_logout"
			invalidate-session="true" delete-cookies="JSESSIONID"
			logout-success-url="/login" />

		<security:remember-me key="boxclick2015"
			token-validity-seconds="864000" data-source-ref="dataSource" />
		
	</security:http>
	
	<!-- aspect configuration -->
	<aop:config>
	    <aop:aspect id="securedAspect" ref="securityFeedbackAspect">
	        <aop:around pointcut="@annotation(org.springframework.security.access.annotation.Secured)" method="handleSecuredAnnotations" />
	    </aop:aspect>
	</aop:config>


</beans>

